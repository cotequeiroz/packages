--- a/src/utils/diffie_hellman.cc
+++ b/src/utils/diffie_hellman.cc
@@ -55,8 +55,14 @@ DiffieHellman::DiffieHellman(const unsig
 
 #ifdef USE_OPENSSL
   m_dh = DH_new();
+# if OPENSSL_VERSION_NUMBER >= 0x10100000L
+  BIGNUM *p = BN_bin2bn(prime, primeLength, NULL);
+  BIGNUM *g = BN_bin2bn(generator, generatorLength, NULL);
+  DH_set0_pqg(m_dh, p, NULL, g);
+# else
   m_dh->p = BN_bin2bn(prime, primeLength, NULL);
   m_dh->g = BN_bin2bn(generator, generatorLength, NULL);
+# endif
 
   DH_generate_key(m_dh);
 #else
@@ -74,7 +80,15 @@ DiffieHellman::~DiffieHellman() {
 bool
 DiffieHellman::is_valid() const {
 #ifdef USE_OPENSSL
+# if OPENSSL_VERSION_NUMBER >= 0x10100000L
+  const BIGNUM *pub_key;
+  if (m_dh == NULL)
+  	return 0;
+  DH_get0_key(m_dh, &pub_key, NULL);
+  return pub_key != NULL;
+# else
   return m_dh != NULL && m_dh->pub_key != NULL;
+# endif
 #else
   return false;
 #endif
@@ -103,8 +117,15 @@ DiffieHellman::store_pub_key(unsigned ch
 #ifdef USE_OPENSSL
   std::memset(dest, 0, length);
 
+# if OPENSSL_VERSION_NUMBER >= 0x10100000L
+  BIGNUM *pub_key;
+  DH_get0_key(m_dh, (const BIGNUM**) &pub_key, NULL);
+  if ((int)length >= BN_num_bytes(pub_key))
+    BN_bn2bin(pub_key, dest + length - BN_num_bytes(pub_key));
+# else
   if ((int)length >= BN_num_bytes(m_dh->pub_key))
     BN_bn2bin(m_dh->pub_key, dest + length - BN_num_bytes(m_dh->pub_key));
+# endif
 #endif
 }
 
